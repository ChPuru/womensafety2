/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  RiskZonePrediction as PrismaRiskZonePrediction,
  SensorData as PrismaSensorData,
} from "@prisma/client";

export class RiskZonePredictionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RiskZonePredictionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.riskZonePrediction.count(args);
  }

  async riskZonePredictions(
    args: Prisma.RiskZonePredictionFindManyArgs
  ): Promise<PrismaRiskZonePrediction[]> {
    return this.prisma.riskZonePrediction.findMany(args);
  }
  async riskZonePrediction(
    args: Prisma.RiskZonePredictionFindUniqueArgs
  ): Promise<PrismaRiskZonePrediction | null> {
    return this.prisma.riskZonePrediction.findUnique(args);
  }
  async createRiskZonePrediction(
    args: Prisma.RiskZonePredictionCreateArgs
  ): Promise<PrismaRiskZonePrediction> {
    return this.prisma.riskZonePrediction.create(args);
  }
  async updateRiskZonePrediction(
    args: Prisma.RiskZonePredictionUpdateArgs
  ): Promise<PrismaRiskZonePrediction> {
    return this.prisma.riskZonePrediction.update(args);
  }
  async deleteRiskZonePrediction(
    args: Prisma.RiskZonePredictionDeleteArgs
  ): Promise<PrismaRiskZonePrediction> {
    return this.prisma.riskZonePrediction.delete(args);
  }

  async getSensorData(parentId: string): Promise<PrismaSensorData | null> {
    return this.prisma.riskZonePrediction
      .findUnique({
        where: { id: parentId },
      })
      .sensorData();
  }
}
